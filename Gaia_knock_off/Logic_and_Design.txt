Workflow in the Workflow folder

So 3 major Features:

1) On Road Routing
2) Off Road Routing
3) Satellite Tracking capabilities per location

On Road Routing Logic:

Take a set of co-ordinates and find possible routes in between them.

Exact logic:

1) On Road Routing Logic and Design:

Find all road combination by coding Roads as objects and make them into a
linked list to the destination.

Map the duration and distance, return the shortest distance using a Heap sorting algorithm
import heapify
heap = heapify(... list of distances)
return heap[0]
using heap[0] map to exact route

In practice to cut development time using GoogleMaps API to code new server facing pythonic API to generate
distances with 3 main information in mind

Routes directions, Route directions with duration and distance for each sub step, and Route directions with duration,
distance and geocode locations (defined by latitude, longitude: start, end) in order to feed into a webframe work like
django in order to manipulate data for user preference.

So user can specify the level of detail they would like and furthermore to allow Continous Integration and
Continous Development (CI/CD) throughout the duration of the project lifespan.

Code design:

Code design wise the Psuedo Algorithm should look like this:

Front end GUI ---> user clicks on on road direction --> enters user information i.e start address and end address -->
Rest API ---> User Information Entered into a SQL or Django ORM database --> passed onto backend onroad.py API as
object variables ---> Variables interact with Codebase (Methods) to generate User requested solution --> User requested
solution generated as list data ---> used to generate text file --> passed back to Django framework via ORM database -->
passed back to rest API ---> rest API generates JSON output ---> JSON output passed to GUI as a downloadable
file or output, per user specification.

Any furthermore modification of the psuedo algorithm, like modifying the codebase, Rest or server API's,



2) Off Road Routing Logic and Design:

First since Off road routing design can't be broken up into objects like roads since patches with no roads can't be
tracked as objects, lack of objects must define patch.

As such the formal logic should be as follows

